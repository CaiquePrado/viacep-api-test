plugins {
    id 'application'
    id 'io.qameta.allure' version '2.24.0'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

allure {
    version = '2.13.8'
    autoconfigure = true
    aspectjweaver = true
    configuration = 'testImplementation'
}

dependencies {
    implementation 'io.rest-assured:rest-assured:5.5.0'
    implementation 'io.rest-assured:json-path:5.5.0'
    implementation 'io.rest-assured:json-schema-validator:5.5.0'
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testImplementation 'org.testng:testng:7.10.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.24.1'
    implementation 'io.qameta.allure:allure-testng:2.24.0'
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

test {
    useTestNG {
        def env = getEnvironment().get('-Denv') ?: getEnvironment().get('-Penv') ?: getEnvironment().get('env')
        if (env != null) {
            System.setProperty("env", env as String)
        }
        println "============ Utilizando ambiente: " + System.getProperty("env", "dev") + " ============ "
        systemProperty "env", findProperty("env") ?: "dev"

        systemProperty "allure.results.directory", "build/allure-results"
    }

    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }

    doFirst {
        delete "build/allure-results"
    }
}
